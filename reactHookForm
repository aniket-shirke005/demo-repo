import React from "react";
import { useForm } from "react-hook-form";
import { yupResolver } from '@hookform/resolvers/yup';
import * as yup from "yup";
import styled from 'styled-components';



const schema = yup.object().shape({

    firstName: yup.string().required('please enter your first name').matches(/^[A-Za-z]+$/i, 'first name should only contain characters'),
    
    lastName: yup.string().required('please enter your last name').matches(/^[A-Za-z]+$/i, 'last name should only contain characters'),
    // city : yup.string().matches(/^[A-Za-z]+$/i, 'city name should only contain characters'),
    email:  yup.string()
              .required('Email is required')
              .email('Email is invalid'),
    mobileNumber : yup.string().required('Mobile Number is required').matches(/^(\+\d{1,3}[- ]?)?\d{10}$/,'please enter valid mobile number'),
});



// function checkCity(e){
//   console.log(e.target.value)
// //   if(e.target.value !== ""){
// //     return true;
// //   }
// // return false;
// }

export default function App() {
  const { register, handleSubmit,watch, formState:{ errors } } = useForm({
    resolver: yupResolver(schema)
  });

  // function checkCity(){
  //   const res = "";
  //   console.log(watch("city") !==res.trim())
  //   if(watch("city") !==res.trim()){
  //     return true;
  //   }
  //   return false;
  // }

  const onSubmit = data =>{
    return console.log(data);
  } 

  // console.log(watch("city"));

  return (
    <FormContainer>
      <Lead>Please fill below fields to contact us</Lead>
      <form onSubmit={handleSubmit(onSubmit)}>
        {/* firstname */}
        <FormControl>
            <label htmlFor="firstName">First Name</label>
            <input {...register("firstName")} />
            {/* input : value= ""  ratnagi123 */}
            <FormError>{errors.firstName?.message}</FormError>      
        </FormControl>
        {/* lastName */}
        <FormControl>
            <label htmlFor="lastName">Last Name</label>
            <input {...register("lastName")} />
            <FormError>{errors.lastName?.message}</FormError>      
        </FormControl>
        {/* email */}
        <FormControl>
            <label htmlFor="email">Email</label>
            <input {...register("email")} />
            <FormError>{errors.email?.message}</FormError>      
        </FormControl>
        {/* city */}
        <FormControl>
            <label htmlFor="city">City</label>
            <input   {...register("city")} />
            <FormError>hello </FormError>
        </FormControl>
        {/* mobile Number */}
        <FormControl>
            <label htmlFor="mobileNumber">Mobile Number</label>
            <input id = "mobileNumber"  {...register("mobileNumber")} />
            <div className="align-center btn-half my-1">
              <Button type="submit" >Send Code</Button> 
            </div>
            <FormError>{errors.mobileNumber?.message}</FormError>      
        </FormControl>
        <div className="align-center">
          <Button type="submit" > Submit</Button>
        </div>
      </form>
    </FormContainer>
  );
}



const FormContainer = styled.div`
width:95%;
max-width: 500px;
margin : 0 auto;
padding:1em;
margin-top: 50px;
font-family: 'Open Sans', sans-serif;
font-weight:300;


@media(min-width:667px){
  .btn-half{ 
    display: inline;
    margin-left:10px;
  }  
  .align-center{
    text-align:center;
  }

}
`
const Lead = styled.p`
  font-weight: 600;
  font-size: 1.5em;
  text-align : center;
  margin-bottom:1.2em;
`
const FormControl = styled.div`
  margin-bottom: 1em;
  
  label{
      display: block;
      margin-bottom: 0.5em;
      font-weight: 400;
      font-size: 0.875;
      line-height: 1.0625em;
      letter-spacing: .5px;
      margin-left: 2px;
  }

  input{
      display: block;
      width: 100%;
      font-size: 15px;
      letter-spacing: .3px;
      padding: 8px 12px;
      border: 2px solid #e3e3e3;
      border-radius: 5px;
      box-sizing: border-box;
      line-height: 1.4;
      background-color: #fff;
      min-width: 0;
      outline: 0;
      font-family: Open Sans;
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
  }
  .my-1{
    margin-top:1em;
  }


  @media (min-width: 667px){
    input[id]{
        display: inline;
        max-width : 40%;
        position:relative;
    }
    div[className=btn-half]{
      position:absolute;
      left : 50%;
      top:0;
    }

  }
`
const Button = styled.button`
  display: inline-block;
  font-weight: 400;
  font-size: 14px;
  text-align: center;
  cursor: pointer;
  text-decoration: none;
  border: 2px solid #029bdc;
  background-color: #029bdc;
  padding: 10px 20px;
  letter-spacing: 1px;
  border-radius: 5px;
  color : #fff;
  
`


const FormError = styled.p`
  color: #f64231;
  margin-top: 5px;
  display: block;
  font-weight: 300;
  font-size: 0.875;
  line-height: 1.0625em;
  letter-spacing: .5px;
  margin-left: 2px;
`
